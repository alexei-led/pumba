name: Build and Push Network Tools Images

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'docker/alpine-nettools.Dockerfile'
      - 'docker/debian-nettools.Dockerfile'
      - '.github/workflows/nettools-images.yaml'
  pull_request:
    paths:
      - 'docker/alpine-nettools.Dockerfile'
      - 'docker/debian-nettools.Dockerfile'
      - '.github/workflows/nettools-images.yaml'
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push Multi-Arch Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: alpine-nettools
            file: docker/alpine-nettools.Dockerfile
            base: alpine
          - name: debian-nettools
            file: docker/debian-nettools.Dockerfile
            base: debian
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Token Permissions
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "Token: ${{ secrets.GITHUB_TOKEN }}" | head -c 10
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/pumba-${{ matrix.image.name }}
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
            type=raw,value=${{ matrix.image.base }}
            type=sha,format=short

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.image.file }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true