name: Pumba CI

on:
  push:
    branches:
    - '*'
    tags:
    - '*'
    paths-ignore:
    - 'docs/**'
    - 'deploy/**'
    - '*.md'
  pull_request:
    branches:
    - '*'

jobs:

  full:
 
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
 
    steps:
    - uses: actions/checkout@v2

    - name: set up Docker buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v3
      with:
        buildx-version: latest
        qemu-version: latest
      
    - name: list available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: decide on tag
      run: |
        image_tag=$(echo ${{ github.ref }} | sed -e 's/^refs\/heads\///g' -e 's/^refs\/tags\///g' -e 's/^refs\/pull\///g' -e 's/\/merge$//g' | sed -e 's/master/latest/g')
        echo "::debug::decide on image tag ${image_tag}"
        echo "::set-env name=IMAGE_TAG::${image_tag}"

    - name: prepare build arguments
      run: |
        build_args=$(echo "--progress=plain --build-arg=CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} --build-arg=VCS_COMMIT_ID=${{ github.sha }} --build-arg=VCS_BRANCH_NAME=${IMAGE_TAG} --build-arg=VCS_SLUG=${{ github.repository }} --file=docker/Dockerfile .")
        echo "::debug::prepare build args ${build_args}"
        echo "::set-env name=BUILD_ARGS::${build_args}"

    - name: build test images
      run: |
        echo "==> compile and test Go code"
        docker buildx build --tag=pumba/build-and-test --target=build-and-test ${BUILD_ARGS}
        echo "==> prepare integration tests image"
        docker buildx build --tag pumba/integration-tests --target=integration-tests ${BUILD_ARGS}

    - name: run integration tests
      run: |
        docker run -i --rm --name integration-tests -v /var/run/docker.sock:/var/run/docker.sock pumba/integration-tests

    - name: upload coverage report
      run: |
        CI_BUILD_URL=https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks
        docker run -i --rm --name upload-coverage -e CI_BUILD_URL=${CI_BUILD_URL} -e CI_BUILD_ID=${RUNNER_TRACKING_ID} pumba/build-and-test

    - name: prepare final image
      if: github.event_name != 'pull_request'
      env:
        DOCKER_ORG: ${{ secrets.DOCKER_ORG }}
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 \
          --output "type=image,push=false" \
          --tag=${DOCKER_ORG}/pumba:${IMAGE_TAG} ${BUILD_ARGS}

    - name: push Docker image
      if: github.event_name != 'pull_request'
      env:
        DOCKER_ACCOUNT: ${{ secrets.DOCKER_ACCOUNT }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        DOCKER_ORG: ${{ secrets.DOCKER_ORG }}
      run: |
        echo ${DOCKER_TOKEN} | docker login -u ${DOCKER_ACCOUNT} --password-stdin
        docker push ${DOCKER_ORG}/pumba:${IMAGE_TAG}
        docker logout

    - name: release to GitHub
      if: github.event_name != 'pull_request'
      run: |
        if [[ "${IMAGE_TAG}" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then \
          docker build buildx \
            --tag pumba/github-release \
            --target=github-release \
            --build-arg=RELEASE=true \
            --build-arg=RELEASE_TAG=${IMAGE_TAG} \
            --build-arg=TAG_MESSAGE="Draft Release" \
            --build-arg=GITHUB_TOKEN=${{ secrets.RELEASE_TOKEN }} ${BUILD_ARGS} \
        fi
