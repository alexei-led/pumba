name: "Release"

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - 'docs/**'
      - 'deploy/**'
      - 'examples/**'
      - 'test/**'
      - '*.md'
      - '*.yaml'

jobs:

  build:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container: golang:1.21-alpine

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build
        shell: sh
        env:
          GOPROXY: https://proxy.golang.org
          CGO_ENABLED: 0
        run: |
          apk --update add ca-certificates tzdata make git bash
          make release

      - uses: actions/upload-artifact@v3
        with:
          name: 'pumba-binaries'
          path: .bin/**


  create-release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    name: release
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'pumba-binaries'
          path: ${{ github.workspace }}/.bin/

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.get_tag.outputs.git_tag }}
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          prerelease: true
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/.bin/**
  push:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    name: push
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: get tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}

      - uses: benjlevesque/short-sha@v2.1
        id: short-sha

      - name: setup buildx
        uses: docker/setup-buildx-action@v2

      - name: login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ACCOUNT }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@v4
        with:
          file: docker/Dockerfile
          context: .
          # skip tests since emulator fails on multi-arch build due to buildx open issue https://github.com/docker/buildx/issues/1986
          build-args: |
            BRANCH=${{ github.ref-name }}
            COMMIT=${{ steps.short-sha.outputs.sha }}
            SKIP_TESTS=true
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_ORG }}/pumba:${{ steps.get_tag.outputs.git_tag }}
            ${{ secrets.DOCKER_ORG }}/pumba:latest